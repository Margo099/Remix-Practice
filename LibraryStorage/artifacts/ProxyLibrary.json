{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:805:2",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "70:80:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "80:22:2",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "95:6:2"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "89:5:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "89:13:2"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "80:5:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "138:5:2"
													}
												],
												"functionName": {
													"name": "validator_revert_t_address",
													"nodeType": "YulIdentifier",
													"src": "111:26:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "111:33:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "111:33:2"
										}
									]
								},
								"name": "abi_decode_t_address_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "48:6:2",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "56:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "64:5:2",
										"type": ""
									}
								],
								"src": "7:143:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "233:207:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "279:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "288:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "291:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "281:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "281:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "281:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "254:7:2"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "263:9:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "250:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "250:23:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "275:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "246:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "246:32:2"
											},
											"nodeType": "YulIf",
											"src": "243:2:2"
										},
										{
											"nodeType": "YulBlock",
											"src": "305:128:2",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "320:15:2",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "334:1:2",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "324:6:2",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "349:74:2",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "395:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "406:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "391:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "391:22:2"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "415:7:2"
															}
														],
														"functionName": {
															"name": "abi_decode_t_address_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "359:31:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "359:64:2"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "349:6:2"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "203:9:2",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "214:7:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "226:6:2",
										"type": ""
									}
								],
								"src": "156:284:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "491:51:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "501:35:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "530:5:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "512:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "512:24:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "501:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "473:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "483:7:2",
										"type": ""
									}
								],
								"src": "446:96:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "593:81:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "603:65:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "618:5:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "625:42:2",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "614:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "614:54:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "603:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "575:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "585:7:2",
										"type": ""
									}
								],
								"src": "548:126:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "723:79:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "780:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "789:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "792:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "782:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "782:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "782:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "746:5:2"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "771:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "753:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "753:24:2"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "743:2:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "743:35:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "736:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "736:43:2"
											},
											"nodeType": "YulIf",
											"src": "733:2:2"
										}
									]
								},
								"name": "validator_revert_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "716:5:2",
										"type": ""
									}
								],
								"src": "680:122:2"
							}
						]
					},
					"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
					"id": 2,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b506040516104c63803806104c68339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b6103b88061010e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80637e490a9e14610051578063ae5e6cf41461006d578063ca5140c914610089578063ce966b2b146100a5575b600080fd5b61006b6004803603810190610066919061030e565b6100c1565b005b6100876004803603810190610082919061030e565b61014f565b005b6100a3600480360381019061009e919061030e565b6101dd565b005b6100bf60048036038101906100ba919061030e565b61026b565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e490a9e826040518263ffffffff1660e01b815260040161011a9190610346565b600060405180830381600087803b15801561013457600080fd5b505af1158015610148573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae5e6cf4826040518263ffffffff1660e01b81526004016101a89190610346565b600060405180830381600087803b1580156101c257600080fd5b505af11580156101d6573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ca5140c9826040518263ffffffff1660e01b81526004016102369190610346565b600060405180830381600087803b15801561025057600080fd5b505af1158015610264573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce966b2b826040518263ffffffff1660e01b81526004016102c49190610346565b600060405180830381600087803b1580156102de57600080fd5b505af11580156102f2573d6000803e3d6000fd5b5050505050565b6000813590506103088161036b565b92915050565b60006020828403121561032057600080fd5b600061032e848285016102f9565b91505092915050565b61034081610361565b82525050565b600060208201905061035b6000830184610337565b92915050565b6000819050919050565b61037481610361565b811461037f57600080fd5b5056fea264697066735822122088c81fb349d9c5d8d55e15ae3dadc7f0a9770436bfb0a92f51f824be07ce770a64736f6c63430008000033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4C6 CODESIZE SUB DUP1 PUSH2 0x4C6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0xE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD DUP5 DUP3 DUP6 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1 DUP3 PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF1 DUP2 PUSH2 0xB6 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3B8 DUP1 PUSH2 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E490A9E EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xAE5E6CF4 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xCA5140C9 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xCE966B2B EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST PUSH2 0xC1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST PUSH2 0x14F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST PUSH2 0x1DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBA SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST PUSH2 0x26B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7E490A9E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x346 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x148 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAE5E6CF4 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x346 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCA5140C9 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x346 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x264 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCE966B2B DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x346 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x308 DUP2 PUSH2 0x36B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x32E DUP5 DUP3 DUP6 ADD PUSH2 0x2F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x340 DUP2 PUSH2 0x361 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x337 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x374 DUP2 PUSH2 0x361 JUMP JUMPDEST DUP2 EQ PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xC8 0x1F 0xB3 0x49 0xD9 0xC5 0xD8 0xD5 0x5E ISZERO 0xAE RETURNDATASIZE 0xAD 0xC7 CREATE 0xA9 PUSH24 0x436BFB0A92F51F824BE07CE770A64736F6C634300080000 CALLER ",
			"sourceMap": "93:590:1:-:0;;;159:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;240:15;207:14;;:49;;;;;;;;;;;;;;;;;;159:105;93:590;;7:143:2;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;93:590:1:-;;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:980:2",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "59:87:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "69:29:2",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "91:6:2"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "78:12:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "78:20:2"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "69:5:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "134:5:2"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "107:26:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "107:33:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "107:33:2"
										}
									]
								},
								"name": "abi_decode_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "37:6:2",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "45:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "53:5:2",
										"type": ""
									}
								],
								"src": "7:139:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "218:196:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "264:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "273:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "276:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "266:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "266:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "266:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "239:7:2"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "248:9:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "235:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "235:23:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "260:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "231:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "231:32:2"
											},
											"nodeType": "YulIf",
											"src": "228:2:2"
										},
										{
											"nodeType": "YulBlock",
											"src": "290:117:2",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "305:15:2",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "319:1:2",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "309:6:2",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "334:63:2",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "369:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "380:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "365:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "365:22:2"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "389:7:2"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "344:20:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "344:53:2"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "334:6:2"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "188:9:2",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "199:7:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "211:6:2",
										"type": ""
									}
								],
								"src": "152:262:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "485:53:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "502:3:2"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "525:5:2"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "507:17:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "507:24:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "495:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "495:37:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "495:37:2"
										}
									]
								},
								"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "473:5:2",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "480:3:2",
										"type": ""
									}
								],
								"src": "420:118:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "642:124:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "652:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "664:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "675:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "660:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "660:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "652:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "732:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "745:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "756:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "741:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "741:17:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "688:43:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "688:71:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "688:71:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "614:9:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "626:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "637:4:2",
										"type": ""
									}
								],
								"src": "544:222:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "817:32:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "827:16:2",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "838:5:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "827:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "799:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "809:7:2",
										"type": ""
									}
								],
								"src": "772:77:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "898:79:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "955:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "964:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "967:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "957:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "957:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "957:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "921:5:2"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "946:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "928:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "928:24:2"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "918:2:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "918:35:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "911:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "911:43:2"
											},
											"nodeType": "YulIf",
											"src": "908:2:2"
										}
									]
								},
								"name": "validator_revert_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "891:5:2",
										"type": ""
									}
								],
								"src": "855:122:2"
							}
						]
					},
					"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
					"id": 2,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80637e490a9e14610051578063ae5e6cf41461006d578063ca5140c914610089578063ce966b2b146100a5575b600080fd5b61006b6004803603810190610066919061030e565b6100c1565b005b6100876004803603810190610082919061030e565b61014f565b005b6100a3600480360381019061009e919061030e565b6101dd565b005b6100bf60048036038101906100ba919061030e565b61026b565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e490a9e826040518263ffffffff1660e01b815260040161011a9190610346565b600060405180830381600087803b15801561013457600080fd5b505af1158015610148573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae5e6cf4826040518263ffffffff1660e01b81526004016101a89190610346565b600060405180830381600087803b1580156101c257600080fd5b505af11580156101d6573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ca5140c9826040518263ffffffff1660e01b81526004016102369190610346565b600060405180830381600087803b15801561025057600080fd5b505af1158015610264573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce966b2b826040518263ffffffff1660e01b81526004016102c49190610346565b600060405180830381600087803b1580156102de57600080fd5b505af11580156102f2573d6000803e3d6000fd5b5050505050565b6000813590506103088161036b565b92915050565b60006020828403121561032057600080fd5b600061032e848285016102f9565b91505092915050565b61034081610361565b82525050565b600060208201905061035b6000830184610337565b92915050565b6000819050919050565b61037481610361565b811461037f57600080fd5b5056fea264697066735822122088c81fb349d9c5d8d55e15ae3dadc7f0a9770436bfb0a92f51f824be07ce770a64736f6c63430008000033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E490A9E EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xAE5E6CF4 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xCA5140C9 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xCE966B2B EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST PUSH2 0xC1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST PUSH2 0x14F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST PUSH2 0x1DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBA SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST PUSH2 0x26B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7E490A9E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x346 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x148 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAE5E6CF4 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x346 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCA5140C9 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x346 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x264 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCE966B2B DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x346 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x308 DUP2 PUSH2 0x36B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x32E DUP5 DUP3 DUP6 ADD PUSH2 0x2F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x340 DUP2 PUSH2 0x361 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x337 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x374 DUP2 PUSH2 0x361 JUMP JUMPDEST DUP2 EQ PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xC8 0x1F 0xB3 0x49 0xD9 0xC5 0xD8 0xD5 0x5E ISZERO 0xAE RETURNDATASIZE 0xAD 0xC7 CREATE 0xA9 PUSH24 0x436BFB0A92F51F824BE07CE770A64736F6C634300080000 CALLER ",
			"sourceMap": "93:590:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;270:94;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;572:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;370:94;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;470:96;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;270:94;323:14;;;;;;;;;;:25;;;349:6;323:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;270:94;:::o;572:108::-;632:14;;;;;;;;;;:32;;;665:6;632:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:108;:::o;370:94::-;423:14;;;;;;;;;;:25;;;449:6;423:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;370:94;:::o;470:96::-;524:14;;;;;;;;;;:26;;;551:6;524:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;470:96;:::o;7:139:2:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:222::-;;675:2;664:9;660:18;652:26;;688:71;756:1;745:9;741:17;732:6;688:71;:::i;:::-;642:124;;;;:::o;772:77::-;;838:5;827:16;;817:32;;;:::o;855:122::-;928:24;946:5;928:24;:::i;:::-;921:5;918:35;908:2;;967:1;964;957:12;908:2;898:79;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "190400",
				"executionCost": "infinite",
				"totalCost": "infinite"
			},
			"external": {
				"borrowBook(uint256)": "infinite",
				"cancelReservation(uint256)": "infinite",
				"reserveBook(uint256)": "infinite",
				"returnBook(uint256)": "infinite"
			}
		},
		"methodIdentifiers": {
			"borrowBook(uint256)": "7e490a9e",
			"cancelReservation(uint256)": "ae5e6cf4",
			"reserveBook(uint256)": "ce966b2b",
			"returnBook(uint256)": "ca5140c9"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_libraryStorage",
					"type": "address"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "bookId",
					"type": "uint256"
				}
			],
			"name": "borrowBook",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "bookId",
					"type": "uint256"
				}
			],
			"name": "cancelReservation",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "bookId",
					"type": "uint256"
				}
			],
			"name": "reserveBook",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "bookId",
					"type": "uint256"
				}
			],
			"name": "returnBook",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}